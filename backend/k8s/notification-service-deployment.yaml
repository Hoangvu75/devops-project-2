apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: microservices
spec:
  selector:
    app: notification-service
  ports:
    - protocol: TCP
      port: 3002
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service-deployment
  namespace: microservices
spec:
  replicas: 2  # Tăng lên 2 replicas
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: notification-service:latest
        imagePullPolicy: Never  # Sử dụng local image
        ports:
        - containerPort: 3000
        env:
        - name: KAFKA_BROKERS
          value: "kafka-service:9092"
        - name: NODE_ENV
          value: "production"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"  # Tắt warning về partitioner
        - name: KAFKA_CONSUMER_GROUP_ID
          value: "notification-consumer-$(HOSTNAME)"  # Unique consumer group cho mỗi pod
        - name: KAFKA_CLIENT_ID
          value: "notification-service-$(HOSTNAME)"  # Unique client ID cho mỗi pod
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /notifications
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /notifications
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: notification-service-hpa
  namespace: microservices
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: notification-service-deployment
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service-external
  namespace: microservices
spec:
  selector:
    app: notification-service
  ports:
    - protocol: TCP
      port: 3002
      targetPort: 3000
  type: NodePort
  externalTrafficPolicy: Local
  sessionAffinity: ClientIP  # Session affinity để load balancing tốt hơn
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800 