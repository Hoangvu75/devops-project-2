# üìö INGRESS ƒê∆†N GI·∫¢N CHO H·ªåC T·∫¨P
# File n√†y ƒë·ªãnh nghƒ©a c√°ch routing traffic t·ª´ internet v√†o c√°c services trong Kubernetes

# üåê PH·∫¶N 1: INGRESS RESOURCE (Ph·∫ßn ch√≠nh - ƒë·ªãnh nghƒ©a routing rules)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices-ingress
  namespace: microservices
  annotations:
    # T·∫Øt HTTPS redirect ƒë·ªÉ d·ªÖ test
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # Cho ph√©p CORS ƒë·ªÉ frontend c√≥ th·ªÉ g·ªçi API
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
spec:
  # S·ª≠ d·ª•ng nginx ingress controller
  ingressClassName: nginx
  
  # üîÄ ROUTING RULES - ƒê·ªãnh nghƒ©a c√°ch route traffic
  rules:
  - host: microservices.local  # Domain ƒë·ªÉ truy c·∫≠p
    http:
      paths:
      # üñ•Ô∏è Route t·ªõi Frontend (trang web ch√≠nh)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 3000
      
      # üì¶ Route t·ªõi Order Service API (rewrite /api/orders/... -> /orders/...)
      - path: /api/orders/?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: order-service
            port:
              number: 3000
      
      # üîî Route t·ªõi Notification Service API (rewrite /api/notifications/... -> /notifications/...)
      - path: /api/notifications/?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: notification-service
            port:
              number: 3000


---
# üè† PH·∫¶N 2: NGINX INGRESS CONTROLLER
# ƒê√¢y l√† b·ªô ƒëi·ªÅu khi·ªÉn th·ª±c s·ª± x·ª≠ l√Ω routing

# T·∫°o namespace ri√™ng cho ingress controller
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx

---
# T·∫°o service account cho nginx controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: ingress-nginx

---
# C·∫•p quy·ªÅn cho nginx controller ƒë·ªÉ ƒë·ªçc ingress rules
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "pods", "secrets", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "ingressclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses/status"]
  verbs: ["update"]

---
# Li√™n k·∫øt quy·ªÅn v·ªõi service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---
# üöÄ Deploy nginx controller pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      labels:
        app: ingress-nginx
    spec:
      serviceAccountName: ingress-nginx
      containers:
      - name: controller
        image: registry.k8s.io/ingress-nginx/controller:v1.8.2
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        args:
        - /nginx-ingress-controller
        - --ingress-class=nginx
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

---
# üåê Expose nginx controller ra ngo√†i internet
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: LoadBalancer
  selector:
    app: ingress-nginx
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https

---
# üìã ƒê·ªãnh nghƒ©a IngressClass
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
spec:
  controller: k8s.io/ingress-nginx
